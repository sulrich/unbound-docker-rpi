name: release docker images

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'unbound version to build and release (e.g., 1.23.1)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    uses: ./.github/workflows/docker-build.yml
    with:
      version: ${{ github.event_name == 'workflow_dispatch' && inputs.version || github.ref_name }}
  
  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      
      - name: set up qemu
        uses: docker/setup-qemu-action@v3
      
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3
      
      - name: log in to github container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ inputs.version }}"
          else
            # extract version from tag (remove 'v' prefix)
            VERSION="${{ github.ref_name }}"
            VERSION=${VERSION#v}
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "releasing version: ${VERSION}"
      
      - name: extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=unbound-rpi
            org.opencontainers.image.description=unbound dns resolver for raspberry pi
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.licenses=MIT
      
      - name: build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ steps.version.outputs.version }}
          file: ./${{ steps.version.outputs.version }}/Dockerfile
          platforms: linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            UNBOUND_VERSION=${{ steps.version.outputs.version }}
      
      - name: release summary
        run: |
          echo "ðŸš€ successfully released docker images:"
          echo "â€¢ ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}"
          echo "â€¢ ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          echo "platforms: linux/arm/v7, linux/arm64"
